

|0000
@bit_idx $2
@error $1 ( this should be last )


|100
;test-mask_clear JSR2
BRK




@test-mask_clear ( -- )
    { 001d "Test 20 "for 20 "mask_clear(bit_idx) 0a } STH2r print-str
    #0000 mask_clear ( 1111 1110 ) #fe EQU #30 ADD #18 DEO #0a18 DEO
    #0001 mask_clear ( 1111 1101 ) #fd EQU #30 ADD #18 DEO #0a18 DEO
    #0002 mask_clear ( 1111 1011 ) #fb EQU #30 ADD #18 DEO #0a18 DEO
    #0003 mask_clear ( 1111 0111 ) #f7 EQU #30 ADD #18 DEO #0a18 DEO
    #0004 mask_clear ( 1110 1111 ) #ef EQU #30 ADD #18 DEO #0a18 DEO
    #0005 mask_clear ( 1101 1111 ) #df EQU #30 ADD #18 DEO #0a18 DEO
    #0006 mask_clear ( 1011 1111 ) #bf EQU #30 ADD #18 DEO #0a18 DEO
    #0007 mask_clear ( 0111 1111 ) #7f EQU #30 ADD #18 DEO #0a18 DEO
JMP2r


@mask_clear ( bit_idx* -: mask )
.bit_idx STZ2 #ff [ #01 .bit_idx LDZ2 NIP #40 SFT SFT ] EOR
JMP2r




@set-bitmap-A
   #01 ;bitmap #0001 ADD2 STA
   #80 ;bitmap #0003 ADD2 STA
   #02 ;bitmap #0004 ADD2 STA
   #60 ;bitmap #0008 ADD2 STA
   #04 ;bitmap #000c ADD2 STA
   #20 ;bitmap #000d ADD2 STA
JMP2r

@set-bitmap-B
   #03 ;bitmap #0001 ADD2 STA ( positions: 16=0,15=1 )
   #c0 ;bitmap #0003 ADD2 STA ( positions: 24=1,25=1 )
   #07 ;bitmap #0004 ADD2 STA ( positions: 37=1,38=1 )
   #60 ;bitmap #0008 ADD2 STA ( positions: 65=0,66=1 )
   #0e ;bitmap #000c ADD2 STA ( positions: 100=1,101=1 )
   #30 ;bitmap #000d ADD2 STA ( position: 106=1,107=1 )
JMP2r


@N_PAGES #0100 JMP2r
@bitmap $40
@print-bit #30 ADD #18 DEO JMP2r
@nl #0a18 DEO JMP2r
@print-str
   #18 !write-string
@write-string ( {str}* unit -- )
            STH
   DUP2 LDA2 ( str len )
   SWP2 ( len str )
   INC2 INC2 DUP2  ( len str+2 str+2 )
   ROT2 ADD2 SWP2 ( str+2+len str+2 )
   &l ( -- )
   LDAk STHrk DEO
       INC2 GTH2k ?&l
       POP2 POP2
            POPr
JMP2r
