
 
|0000

@error $1 ( this should be last )

 
|100
;test-get_bit JSR2
BRK
 
 
@get_bit
;&idx STA2 ;&idx LDA2 #03 SFT2 ;&byte_idx STA2
#0007 ;&idx LDA2 ;&byte_idx LDA2 #30 SFT2 SUB2 SUB2 ;&bit_idx STA2
;&byte_idx LDA2 N_PAGES #0001 SUB2 GTH2 not ,&cont JCN
            #04 .error STZ
&cont
;bitmap ;&byte_idx LDA2 ADD2 LDA ;&byte STA
;&byte LDA ;&bit_idx LDA2 NIP SFT #01 AND
JMP2r
 
&idx $2
&byte_idx $2
&bit_idx $2
&byte $1

 
@not #01 SWP SUB JMP2r
 
@test-get_bit ( -- )
   { 0016 "Test 20 "for 20 "get_bit(idx) 0a } STH2r print-str
   ( 
   #01 ;bitmap #0001 ADD2 STA ( positions: 16=1,15=0 )
   #80 ;bitmap #0003 ADD2 STA ( positions: 24=1,25=0 )
   #02 ;bitmap #0004 ADD2 STA ( positions: 38=1,39=0 )
   #60 ;bitmap #0008 ADD2 STA ( positions: 65=1,66=1 )
   #04 ;bitmap #000c ADD2 STA ( positions: 101=1,102=0 )
   #20 ;bitmap #000d ADD2 STA ( position: 106=1,107=0 )
   )
   set-bitmap-A
 
   #0010 get_bit #00 EQU #000f get_bit #01 EQU AND print-bit nl
   #0018 get_bit #01 EQU #0019 get_bit #00 EQU AND print-bit nl
   #0026 get_bit #01 EQU #0027 get_bit #00 EQU AND print-bit nl
   #0041 get_bit #01 EQU #0042 get_bit #01 EQU AND print-bit nl
   #0065 get_bit #01 EQU #0066 get_bit #00 EQU AND print-bit nl
   #006a get_bit #01 EQU #006b get_bit #00 EQU AND print-bit nl
 
   set-bitmap-B
 
   #0010 get_bit #00 EQU #000f get_bit #01 EQU AND print-bit nl
   #0018 get_bit #01 EQU #0019 get_bit #01 EQU AND print-bit nl
   #0026 get_bit #01 EQU #0025 get_bit #01 EQU AND print-bit nl
   #0041 get_bit #01 EQU #0042 get_bit #01 EQU AND print-bit nl
   #0064 get_bit #01 EQU #0065 get_bit #01 EQU AND print-bit nl
   #006a get_bit #01 EQU #006b get_bit #01 EQU AND print-bit nl
 
JMP2r
 
@set-bitmap-A
   #01 ;bitmap #0001 ADD2 STA 
   #80 ;bitmap #0003 ADD2 STA 
   #02 ;bitmap #0004 ADD2 STA 
   #60 ;bitmap #0008 ADD2 STA 
   #04 ;bitmap #000c ADD2 STA 
   #20 ;bitmap #000d ADD2 STA
JMP2r
 
@set-bitmap-B
   #03 ;bitmap #0001 ADD2 STA ( positions: 16=0,15=1 )
   #c0 ;bitmap #0003 ADD2 STA ( positions: 24=1,25=1 )
   #07 ;bitmap #0004 ADD2 STA ( positions: 37=1,38=1 )
   #60 ;bitmap #0008 ADD2 STA ( positions: 65=0,66=1 )
   #0e ;bitmap #000c ADD2 STA ( positions: 100=1,101=1 )
   #30 ;bitmap #000d ADD2 STA ( position: 106=1,107=1 )
JMP2r
 
 
@N_PAGES #0100 JMP2r
@bitmap $40
@print-bit #30 ADD #18 DEO JMP2r
@nl #0a18 DEO JMP2r
@print-str 
   #18 !write-string
@write-string ( {str}* unit -- )
            STH
   DUP2 LDA2 ( str len )
   SWP2 ( len str )
   INC2 INC2 DUP2  ( len str+2 str+2 )
   ROT2 ADD2 SWP2 ( str+2+len str+2 )
   &l ( -- )
   LDAk STHrk DEO
       INC2 GTH2k ?&l
       POP2 POP2 
            POPr
JMP2r
 